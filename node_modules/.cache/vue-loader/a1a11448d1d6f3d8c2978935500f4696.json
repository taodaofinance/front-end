{"remainingRequest":"C:\\GitCrypto\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitCrypto\\front_end\\src\\views\\Vested.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\GitCrypto\\front_end\\src\\views\\Vested.vue","mtime":1620499713551},{"path":"C:\\GitCrypto\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOw0KaW1wb3J0IHsgc2hvcnRlbiB9IGZyb20gJ0AvaGVscGVycy91dGlscy50cyc7DQppbXBvcnQgeyBldGhlcnMgfSBmcm9tICdldGhlcnMnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGFzeW5jIG1vdW50ZWQoKSB7DQogICAgdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MubWVudU9wZW5lZCA9IGZhbHNlOw0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB2YWx1ZTogJycsDQogICAgICBtb2RhbExvZ2luT3BlbjogZmFsc2UsDQogICAgICBtb2RhbE1ha2Vwb3Rpb25PcGVuOiBmYWxzZSwNCiAgICAgIGFtb3VudDogJycsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAuLi5tYXBTdGF0ZShbJ3NldHRpbmdzJ10pLA0KICAgIGlzVmFsaWQoKSB7DQogICAgICByZXR1cm4gcGFyc2VGbG9hdCh0aGlzLnZhbHVlKTsNCiAgICB9LA0KICAgIG1heFN0cmlrZSgpIHsNCiAgICAgIGNvbnN0IGV4Y2hhbmdlUmF0ZSA9IHRoaXMuc2V0dGluZ3MuZXhjaGFuZ2VSYXRlc1t0aGlzLmZvcm0uYXNzZXRdOw0KICAgICAgcmV0dXJuIGV4Y2hhbmdlUmF0ZSAmJiBleGNoYW5nZVJhdGUudXNkID8gZXhjaGFuZ2VSYXRlLnVzZCA6IDFlOTsNCiAgICB9LA0KICAgIGhhc0FsbG93YW5jZSgpIHsNCiAgICAgIGlmIChwYXJzZUZsb2F0KHRoaXMudmFsdWUpKSB7DQogICAgICAgIHJldHVybiAoDQogICAgICAgICAgcGFyc2VJbnQodGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MuZXhlcmNpc2VQdGFvQWxsb3dhbmNlKSA+PQ0KICAgICAgICAgICAgcGFyc2VJbnQoZXRoZXJzLnV0aWxzLnBhcnNlRXRoZXIodGhpcy52YWx1ZSkpICYmDQogICAgICAgICAgcGFyc2VJbnQodGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MuZXhlcmNpc2VCdXNkQWxsb3dhbmNlKSA+PQ0KICAgICAgICAgICAgcGFyc2VJbnQoZXRoZXJzLnV0aWxzLnBhcnNlRXRoZXIodGhpcy52YWx1ZSkpDQogICAgICAgICk7DQogICAgICB9DQogICAgICByZXR1cm4gZmFsc2U7DQogICAgfSwNCiAgICBhZGRyZXNzKCkgew0KICAgICAgaWYgKHRoaXMuJHN0b3JlLnN0YXRlLnNldHRpbmdzLmFkZHJlc3MpIHJldHVybiB0aGlzLnNldHRpbmdzLmFkZHJlc3M7DQogICAgICByZXR1cm4gbnVsbDsNCiAgICB9LA0KICAgIGRpc2Nvbm5lY3QoKSB7DQogICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MuYWRkcmVzcykgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmFkZHJlc3MuaW5pdGlhbDsNCiAgICAgIHJldHVybiBudWxsOw0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC4uLm1hcEFjdGlvbnMoWydleGVyY2lzZVB0YW8nLCAnZ2V0QXBwcm92YWxFeGVyY2lzZUJ1c2QnLCAnZ2V0QXBwcm92YWxFeGVyY2lzZVB0YW8nXSksDQogICAgc2hvcnRlbiwNCiAgICBhc3luYyBzZWVrQXBwcm92YWwoKSB7DQogICAgICBhd2FpdCB0aGlzLmdldEFwcHJvdmFsRXhlcmNpc2VCdXNkKHRoaXMudmFsdWUpOw0KICAgICAgYXdhaXQgdGhpcy5nZXRBcHByb3ZhbEV4ZXJjaXNlUHRhbyh0aGlzLnZhbHVlKTsNCiAgICB9LA0KICAgIGFzeW5jIHN3YXAoKSB7DQogICAgICBhd2FpdCB0aGlzLmV4ZXJjaXNlUHRhbyh0aGlzLnZhbHVlKTsNCiAgICB9LA0KICAgIGFzeW5jIG1heEFsbG9jKCkgew0KDQogICAgICBkZWJ1Z2dlcjsNCiAgICAgIGNvbnN0IHNldHRpbmdzID0gdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3M7DQoNCiAgICAgIHRoaXMudmFsdWUgPQ0KICAgICAgICBwYXJzZUZsb2F0KHNldHRpbmdzLmJhbGFuY2UpID49IHBhcnNlRmxvYXQoc2V0dGluZ3MucHJldGFvQmFsYW5jZSkNCiAgICAgICAgICA/IHNldHRpbmdzLnByZXRhb0JhbGFuY2UNCiAgICAgICAgICA6IHNldHRpbmdzLmJhbGFuY2U7DQoNCiAgICAgIGNvbnN0IHBlcmMgPSBwYXJzZUZsb2F0KHNldHRpbmdzLmNpcmNTdXBwbHkpIC8gcGFyc2VGbG9hdChzZXR0aW5ncy50b3RhbFN1cHBseSk7DQogICAgICBjb25zdCBhYmxlVG9DbGFpbSA9IHBhcnNlRmxvYXQoc2V0dGluZ3MuZXhlcmNpc2VBYmxlVG9DbGFpbSkgKiBwZXJjOw0KDQogICAgICB0aGlzLnZhbHVlID0gYWJsZVRvQ2xhaW0gPj0gcGFyc2VGbG9hdCh0aGlzLnZhbHVlKSA/IHRoaXMudmFsdWUgOiBhYmxlVG9DbGFpbTsNCg0KICAgICAgdGhpcy5hbW91bnQgPSB0aGlzLnZhbHVlOw0KICAgIH0sDQogICAgdXBkYXRlVmFsdWVzT25PdXRDaGFuZ2UoKSB7DQogICAgICB0aGlzLmFtb3VudCA9IHRoaXMudmFsdWU7DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["Vested.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Vested.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"dapp\" class=\"dapp\">\r\n      <Navbar />\r\n      <div class=\"wrapper\">\r\n        <div class=\"dapp-center-modal\">\r\n          <div class=\"dapp-modal-wrapper\" v-if=\"$store.state.settings.exerciseMaxAllowedClaim > 0\">\r\n            <div class=\"swap-input-column\">\r\n              <div class=\"balance-row\">\r\n                <p>Balance</p>\r\n                <p class=\"balance-data\">{{ $store.state.settings.balance }}</p>\r\n                <p>BUSD</p>\r\n                <p style=\"margin-left: 5px; margin-right: 1px\">/</p>\r\n                <p class=\"balance-data\">{{ $store.state.settings.pretaoBalance }}</p>\r\n                <p>pTAO</p>\r\n              </div>\r\n\r\n              <div class=\"swap-input-row\">\r\n                <div class=\"swap-input-container\">\r\n                  <input\r\n                    v-model=\"value\"\r\n                    v-on:change=\"updateValuesOnOutChange\"\r\n                    placeholder=\"0.0\"\r\n                    class=\"swap-input\"\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"cur-max-box\">\r\n                  <div class=\"max-button\" @click=\"maxAlloc\">100%</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"swap-arrow\">\r\n                <b-icon icon=\"arrow-down\" style=\"width: 25px; height: 25px\"></b-icon>\r\n              </div>\r\n\r\n              <div class=\"swap-ourput-row\">\r\n                <div class=\"swap-output-container\">\r\n                  <input v-model=\"amount\" placeholder=\"0.0\" class=\"swap-output\" type=\"text\" />\r\n                </div>\r\n                <div class=\"cur-max-box\">\r\n                  <div class=\"max-button\">TAO</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"balance-row\">\r\n                <p class=\"balance-data\">{{ $store.state.settings.ohmBalance }}</p>\r\n                <p>TAO</p>\r\n              </div>\r\n\r\n              <span v-if=\"$store.state.settings.initializedPretao == true\" style=\"margin-top: 30px\">\r\n                <div v-if=\"hasAllowance\" class=\"swap-button-container\">\r\n                  <div class=\"swap-button\" @click=\"swap\">SWAP</div>\r\n                </div>\r\n                <div v-else class=\"swap-button-container\">\r\n                  <div class=\"swap-button\" @click=\"seekApproval\">Approve</div>\r\n                </div>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\nimport { shorten } from '@/helpers/utils.ts';\r\nimport { ethers } from 'ethers';\r\n\r\nexport default {\r\n  async mounted() {\r\n    this.$store.state.settings.menuOpened = false;\r\n  },\r\n  data() {\r\n    return {\r\n      value: '',\r\n      modalLoginOpen: false,\r\n      modalMakepotionOpen: false,\r\n      amount: '',\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['settings']),\r\n    isValid() {\r\n      return parseFloat(this.value);\r\n    },\r\n    maxStrike() {\r\n      const exchangeRate = this.settings.exchangeRates[this.form.asset];\r\n      return exchangeRate && exchangeRate.usd ? exchangeRate.usd : 1e9;\r\n    },\r\n    hasAllowance() {\r\n      if (parseFloat(this.value)) {\r\n        return (\r\n          parseInt(this.$store.state.settings.exercisePtaoAllowance) >=\r\n            parseInt(ethers.utils.parseEther(this.value)) &&\r\n          parseInt(this.$store.state.settings.exerciseBusdAllowance) >=\r\n            parseInt(ethers.utils.parseEther(this.value))\r\n        );\r\n      }\r\n      return false;\r\n    },\r\n    address() {\r\n      if (this.$store.state.settings.address) return this.settings.address;\r\n      return null;\r\n    },\r\n    disconnect() {\r\n      if (this.$store.state.settings.address) return this.$store.state.address.initial;\r\n      return null;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['exercisePtao', 'getApprovalExerciseBusd', 'getApprovalExercisePtao']),\r\n    shorten,\r\n    async seekApproval() {\r\n      await this.getApprovalExerciseBusd(this.value);\r\n      await this.getApprovalExercisePtao(this.value);\r\n    },\r\n    async swap() {\r\n      await this.exercisePtao(this.value);\r\n    },\r\n    async maxAlloc() {\r\n\r\n      debugger;\r\n      const settings = this.$store.state.settings;\r\n\r\n      this.value =\r\n        parseFloat(settings.balance) >= parseFloat(settings.pretaoBalance)\r\n          ? settings.pretaoBalance\r\n          : settings.balance;\r\n\r\n      const perc = parseFloat(settings.circSupply) / parseFloat(settings.totalSupply);\r\n      const ableToClaim = parseFloat(settings.exerciseAbleToClaim) * perc;\r\n\r\n      this.value = ableToClaim >= parseFloat(this.value) ? this.value : ableToClaim;\r\n\r\n      this.amount = this.value;\r\n    },\r\n    updateValuesOnOutChange() {\r\n      this.amount = this.value;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.hasEffect {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n<!--\r\n\r\n\r\n\r\n\r\n<template>\r\n  <div class=\"block\">\r\n    <h1 class=\"mb-4 main-title\">OLYMPUS</h1>\r\n    <p class=\"mb-4\"><b class=\"warn\">This is a private presale. The price of each pOLY is 0.01 DAI.</b>  If you have not been invited, your transaction will fail and waste your transaction fee!</p>    \r\n    <p class=\"mb-2\">\r\n      Dai Balance: <span class=\"hasEffect\" @click=\"maxStake\">{{ Math.floor($store.state.settings.balance * 100) / 100 }}</span>\r\n    </p>\r\n\r\n    <form @submit.prevent=\"handleSubmit\" class=\"form\">\r\n      <div class=\"mb-0\">\r\n    \r\n        <input\r\n          v-if = \"settings.authorized && settings.address && settings.allowanceTx<1\"\r\n          type=\"number\"\r\n          class=\"input mb-4\"\r\n          placeholder=\"Quantity\"\r\n          step=\"0.000000000000000001\"\r\n          v-model=\"form.quantity\"\r\n        />\r\n        <div class=\"d-flex\"></div>\r\n      </div>\r\n      <button\r\n        v-if=\"settings.authorized && settings.address && settings.allowanceTx<1\"\r\n        :disabled=\"!isValid\"\r\n        type=\"submit\"\r\n        class=\"button button-primary mb-2\"\r\n      >\r\n        Enter Presale\r\n      </button>\r\n      <a v-if=\"!settings.address\" class=\"button button-primary mb-2\" @click=\"modalLoginOpen = true\">Connect wallet</a>\r\n      <p v-if=\"!settings.authorized && settings.address\"><b class=\"warn\">Your account is not on the Pre-sale list. You cannot participate in this sale.</b></p>\r\n    </form>\r\n    <p v-if=\"settings.allowanceTx===1\">Please wait. Waiting for {{$store.state.settings.confirmations}} confirmations</p>\r\n    <p v-if=\"settings.saleTx===1\"><b>Transaction submitted. Waiting for {{$store.state.settings.confirmations}} confirmations...</b></p>\r\n    <p v-if=\"settings.saleTx===2\"><b>Token Purchase Complete!</b></p>\r\n    <ModalLogin :open=\"modalLoginOpen\" @close=\"modalLoginOpen = false\" />\r\n    <ModalMakepotion\r\n      v-if=\"isValid\"\r\n      :open=\"modalMakepotionOpen\"\r\n      :form=\"form\"\r\n      @close=\"modalMakepotionOpen = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        quantity: ''\r\n      },\r\n      modalLoginOpen: false,\r\n      modalMakepotionOpen: false\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['settings']),\r\n    isValid() {\r\n      return parseFloat(this.form.quantity);\r\n    },\r\n    maxStrike() {\r\n      const exchangeRate = this.settings.exchangeRates[this.form.asset];\r\n      return exchangeRate && exchangeRate.usd ? exchangeRate.usd : 1e9;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['SendDai']),\r\n    handleSubmit() {\r\n      this.SendDai({\r\n        //address: '0xb72027693a5B717B9e28Ea5E12eC59b67c944Df7',\r\n        value: this.form.quantity\r\n      });\r\n    },\r\n    maxStake() {\r\n      this.form.quantity = this.$store.state.settings.balance;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.hasEffect {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n-->\r\n"]}]}
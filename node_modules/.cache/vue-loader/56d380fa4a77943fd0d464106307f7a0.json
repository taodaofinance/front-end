{"remainingRequest":"C:\\GitCrypto\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitCrypto\\front_end\\src\\components\\Navbar.vue?vue&type=style&index=0&id=41458b80&scoped=true&lang=css&","dependencies":[{"path":"C:\\GitCrypto\\front_end\\src\\components\\Navbar.vue","mtime":1620499713483},{"path":"C:\\GitCrypto\\front_end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitCrypto\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmhhc0VmZmVjdCB7DQogIGN1cnNvcjogcG9pbnRlcjsNCn0NCg=="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"dapp-sidebar\">\r\n    <div class=\"dapp-menu-top\">\r\n      <div class=\"branding-header\">\r\n        <router-link :to=\"{ name: 'home' }\" class=\"branding-header-logo-link\">\r\n          <img class=\"branding-header-icon\" src=\"~/@/assets/taodao_logo.png\" alt=\"\" />\r\n        </router-link>\r\n      </div>\r\n      <div class=\"branding-menu h-hidden-desktop\">\r\n        <div @click=\"$store.state.settings.menuOpened = !$store.state.settings.menuOpened\">\r\n          <b-icon\r\n            v-if=\"$store.state.settings.menuOpened == false\"\r\n            icon=\"list\"\r\n            style=\"width: 30px; height: 30px\"\r\n          ></b-icon>\r\n          <b-icon\r\n            v-if=\"$store.state.settings.menuOpened == true\"\r\n            icon=\"x\"\r\n            style=\"width: 30px; height: 30px\"\r\n          ></b-icon>\r\n        </div>\r\n      </div>\r\n      <div class=\"wallet-menu h-hidden-mobile\">\r\n        <a\r\n          v-if=\"address\"\r\n          class=\"disconnect-button button-primary button\"\r\n          @click=\"$store.state.settings.address = ''\"\r\n          >Disconnect</a\r\n        >\r\n        <a v-if=\"address\" class=\"dapp-sidebar-button-connected button button-info\">\r\n          <span class=\"login-bullet mr-2 ml-n2\" />\r\n          {{ shorten(address) }}\r\n        </a>\r\n        <a\r\n          v-else\r\n          class=\"button button-primary\"\r\n          @click=\"$store.state.settings.modalLoginOpen = true\"\r\n        >\r\n          Connect wallet\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"dapp-menu-links h-hidden-mobile\">\r\n      <Dav />\r\n    </div>\r\n    <div class=\"dapp-menu-social h-hidden-mobile\">\r\n      <Social />\r\n    </div>\r\n    <div\r\n      class=\"dapp-menu-mobile-fs h-hidden-desktop\"\r\n      v-if=\"$store.state.settings.menuOpened == true\"\r\n      v-bind:style=\"{\r\n        height: $store.state.settings.menuOpened == true ? 'calc(100vh - 80px)' : '0px',\r\n      }\"\r\n    >\r\n      <Dav />\r\n      <Social />\r\n      <a\r\n        v-if=\"address\"\r\n        class=\"disconnect-button button-primary button\"\r\n        @click=\"$store.state.settings.address = ''\"\r\n        >Disconnect</a\r\n      >\r\n      <a v-if=\"address\" class=\"dapp-sidebar-button-connected button button-info\">\r\n        <span class=\"login-bullet mr-2 ml-n2\" />\r\n        {{ shorten(address) }}\r\n      </a>\r\n      <a v-else class=\"button button-primary\" @click=\"$store.state.settings.modalLoginOpen = true\">\r\n        Connect wallet\r\n      </a>\r\n    </div>\r\n    <ModalLogin\r\n      :open=\"$store.state.settings.modalLoginOpen\"\r\n      @close=\"$store.state.settings.modalLoginOpen = false\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\nimport { shorten } from '@/helpers/utils.ts';\r\nimport { ethers } from 'ethers';\r\nexport default {\r\n  data() {\r\n    return {\r\n      myOptions: {\r\n        layout: {\r\n          color: 'white',\r\n          backgroundColor: '#282828',\r\n          selectedColor: 'white',\r\n          selectedBackgroundColor: 'green',\r\n          borderColor: 'white',\r\n          fontFamily: 'Arial',\r\n          fontWeight: 'normal',\r\n          lineHeight: '1',\r\n          fontWeightSelected: 'bold',\r\n          squareCorners: false,\r\n          noBorder: false,\r\n        },\r\n        size: {\r\n          fontSize: 1,\r\n          height: 2.5,\r\n          padding: 0.3,\r\n          width: 15,\r\n          borderRadius: 5,\r\n        },\r\n        items: {\r\n          delay: 0.4,\r\n          preSelected: 'unknown',\r\n          disabled: false,\r\n          labels: [\r\n            { name: 'Bond', color: 'black', backgroundColor: 'white' },\r\n            { name: 'Redeem', color: 'black', backgroundColor: 'white' },\r\n          ],\r\n        },\r\n      },\r\n      selectedMapOption: 'Bond',\r\n      bondToggle: true,\r\n    };\r\n  },  \r\n  computed: {\r\n    ...mapState(['settings']),\r\n\r\n    address() {\r\n      if (this.$store.state.settings.address) return this.settings.address;\r\n      return null;\r\n    },\r\n    disconnect() {\r\n      if (this.$store.state.settings.address) return this.$store.state.address.initial;\r\n      return null;\r\n    },\r\n  },\r\n  methods: {\r\n    shorten,\r\n\r\n    trim(number, precision) {\r\n      if (number == undefined) {\r\n        number = 0;\r\n      }\r\n      const array = number.toString().split('.');\r\n      array.push(array.pop().substring(0, precision));\r\n      const trimmedNumber = array.join('.');\r\n      return trimmedNumber;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.hasEffect {\r\n  cursor: pointer;\r\n}\r\n</style>"]}]}